#=================================================
# Description: Build immortalwrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build

on: 
  # release:
  #   types: [published]

  # push:
  #  branches: 
  #    - master

  schedule:
   - cron: 0 0 7,29 * *
  
  watch:
   types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:    
      matrix:
        config: [AX6S, x86_64]
        # config: [CR6608, K2P, x86_64, AX6S]
        # config: [x86_64]

    steps:
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt update
        sudo -E apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/immortalwrt/immortalwrt
        REPO_BRANCH: master
      run: |
        git clone $REPO_URL
        cd immortalwrt
        git checkout $REPO_BRANCH
        git fetch -t
        latest_tag=`git tag --sort=committerdate | tail -1`
        # latest_tag=v23.05.2
        git checkout ${latest_tag}
        
    - name: Update & Install feeds
      working-directory: ./immortalwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
  
    - name: Configuration Customization - Build
      env:
        CONFIG_FILE: '${{ matrix.config }}.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE immortalwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd immortalwrt && make defconfig
        
    - name: Download package
      working-directory: ./immortalwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build firmware
      working-directory: ./immortalwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: immortalwrt-${{ matrix.config }} 
        path: |
          immortalwrt/bin/targets/**/immortalwrt-*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 90
        keep_minimum_runs: 10

    - name: Push Routine
      run: |
        git config --global user.name "Cosmos-Break"
        git config --global user.email "438854233@qq.com"
        git pull
        date -R >> test
        git add test
        git commit -m "push"
        git push
